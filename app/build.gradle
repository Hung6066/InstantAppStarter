apply plugin: 'com.android.application'

android {
    signingConfigs {
        uatRelease {
            keyAlias 'uR'
            keyPassword 'android'
            storeFile file('/Users/kuliza-300/Documents/Github/InstantAppStarter/app/uatKeystore.jks')
            storePassword 'android'
        }
    }
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "com.iambedant.instantappstarter.app"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    flavorDimensions "mode"
    productFlavors {
        uat {
            it.buildConfigField 'String', 'BASE_URL', BaseUrlUat
            it.buildConfigField 'String', 'PASSWORD', passwordUat
            applicationId "com.iambedant.instantappstarter.app.uat"
            dimension "mode"
        }
        prod {
            it.buildConfigField 'String', 'BASE_URL', BaseUrlProd
            it.buildConfigField 'String', 'PASSWORD', passwordProd
            applicationId "com.iambedant.instantappstarter.app"
            dimension "mode"
        }
    }
    buildTypes {
        debug {

        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }
        debug {
            applicationIdSuffix ".debug"
            debuggable true
            minifyEnabled false
            useProguard false
        }
        release {
            debuggable false
            minifyEnabled true
            useProguard true
            signingConfig signingConfigs.uatRelease
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        qualityassurance {
            applicationIdSuffix ".quality"
            debuggable true
            minifyEnabled true
            useProguard true
            signingConfig signingConfigs.uatRelease
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    splits {

        // Configures multiple APKs based on ABI.
        abi {

            // Enables building multiple APKs per ABI.
            enable false

            // By default all ABIs are included, so use reset() and include to specify that we only
            // want APKs for x86, armeabi-v7a, and mips.

            // Resets the list of ABIs that Gradle should create APKs for to none.
            reset()

            // Specifies a list of ABIs that Gradle should create APKs for.
            include "x86_64", "armeabi-v7a", "x86", "arm64-v8a"

            // Specifies that we do not want to also generate a universal APK that includes all ABIs.
            universalApk true
        }
    }
    lintOptions {

        // If set to true, turns off analysis progress reporting by lint.
        quiet true
        // if set to true (default), stops the build if errors are found.
        abortOnError false
        // if true, only report errors.
        ignoreWarnings true
    }
}

dependencies {
    implementation project(':base')
    implementation project(':featureone')
    implementation project(':featuretwo')
    implementation project(':others')
}
