apply plugin: 'com.android.feature'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion


    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    flavorDimensions "mode"
    productFlavors {
        uat {
            it.buildConfigField 'String', 'BASE_URL', BaseUrlUat
            it.buildConfigField 'String', 'PASSWORD', passwordUat
            dimension "mode"
        }
        prod {
            it.buildConfigField 'String', 'BASE_URL', BaseUrlProd
            it.buildConfigField 'String', 'PASSWORD', passwordProd
            dimension "mode"
        }
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            useProguard false
        }
        release {
            debuggable false
            minifyEnabled true
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        qualityassurance {
            debuggable true
            minifyEnabled true
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
//    splits {
//        abi {
//            enable false
//            reset()
//            include "x86_64", "armeabi-v7a", "x86", "arm64-v8a"
//            universalApk true
//        }
//    }
    lintOptions {

        // If set to true, turns off analysis progress reporting by lint.
        quiet true
        // if set to true (default), stops the build if errors are found.
        abortOnError false
        // if true, only report errors.
        ignoreWarnings true
    }
}

dependencies {
    implementation project(':base')
    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"
    annotationProcessor "com.google.dagger:dagger-android-processor:$daggerVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "com.android.support.test:runner:$testRunnerVersion"
    androidTestImplementation "com.android.support.test:rules:$testRunnerVersion"
    androidTestImplementation "com.android.support:support-annotations:$supportLibraryVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espressoVersion"
    debugImplementation "com.android.support.test.espresso.idling:idling-concurrent:$espressoVersion"
    debugImplementation ('com.jakewharton.espresso:okhttp3-idling-resource:1.0.0') {
        exclude module: 'support-annotations'
    }
    androidTestImplementation "com.squareup.rx.idler:rx2-idler:$rxIdlerversion"
    androidTestImplementation "com.android.support.test.espresso:espresso-contrib:$espressoVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"


}
repositories {
    mavenCentral()
}
